Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 * ¿Cuántos paquetes componen la captura?
	La captura tiene 954 paquetes.

 * ¿Cuánto tiempo dura la captura?
	56,149345 segundos.

 * ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	La máquina donde se ha efectuado la captura es la 192.168.1.34. Es una IP privada de clase C, ya que se encuentra entre los rangos 192.168.0.0 	 a 192.168.255.255. Es decir, una dirección IP dentro de estos rangos se considera, por lo tanto, no direccionable, debido a que no es exclusiva.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.

 * ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando de una aplicación que transmite en tiempo real?
	El porcentaje mayor es el de UDP con 96,2%, mientras que TCP tiene un 2,1%. RTP se encapsula en UDP porque TCP no es válido para poder 		transmitir en tiempo real.

 * ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos? ¿Cuales crees que son señal y cuales ruido?
	Podemos ver otros protocolos como: SIP, RTP, ICMP, HTTP, DNS, RTCP, ICMP, STUN.
Todos son señal menos ICMP y ARP que son ruido. 

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.

 * Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En qué segundos tienen lugar esos envı́os?
	Hemos filtrado por sip y hemos podido ver en la gráfica que en el segundo 7 se hace un registro, en el 14 apróximadamente hay un intento de 		llamada, ya que se vuelve a repetir en el segundo 16. Por último se recibe los BYE en el segundo 38 y expira en el segundo 54. 

 * Y los paquetes con RTP, ¿cuándo se envı́an?
	Estos paquetes se envían durante la llamada.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.

 * ¿Qué servicio es el utilizado en estas tramas?
	DNS

 * ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
	La dirección IP del servidor es 80.58.61.250.

 * ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	La dirección IP 86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.

 * ¿Podrı́as decir la URL que se está pidiendo?
	La URL que se está pidiendo es http://ekiga.net/ip/.

 * ¿Qué user agent (UA) la está pidiendo?
	Ekiga.net

 * ¿Qué devuelve el servidor?
	Un 200 OK con la dirección IP 83.36.48.212

 * Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
	Recibimos una dirección IP privada (37.35.207.92), que es la nuestra. 

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.

 * ¿Por qué se hace uso de este protocolo?
	Es un protocolo de red del tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública, el tipo de NAT en el que se encuentra y el puerto de internet asociado con el puerto local a través de NAT. Se utiliza para poder establecer la comunicación entre dos extremos que se encuentran tras enrutadores NAT.

 * ¿Podrı́as decir si estamos tras un NAT o no?
	Sí, ya que estamos usando el protocolo STUN.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.

 * ¿Qué dirección IP tiene el servidor Registrar?
	El servidor Registrar tiene como dirección IP: 86.64.162.35.

 * ¿A qué puerto (del servidor Registrar) se envı́an los paquetes SIP?
	El puerto al que se envían los paquetes SIP es el 5060.

 * ¿Qué método SIP utiliza el UA para registrarse?
	Utiliza el método REGISTER.

 * Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
	INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:

 * ¿Se registra con éxito en el primer intento?
	No se registra con éxito en el primer intento y el servidor le contesta con un mensaje 401 Unauthorized.
 * ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Sabemos que es correcto cuando el servidor contesta con un 200 OK. 

 * ¿Podrı́as identificar las diferencias entre el primer intento y el segundo de registro? (fı́jate en el tamaño de los paquetes y mira a qué se debe el cambio)
	En el primer intento no se encuentra la cabecera de Autentificación, mientras que en el segundo intento sí. 

 * ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
	El valor del tiempo de expiración de la sesión lo podemos encontrar en la cabecera Expires y tiene un valor de 3600 segundos. 

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.

 * ¿Puede verse el nombre del que efectúa la llamada, ası́ como su dirección SIP?
	Sí, esta información la podemos ver en el campo From. 
 * ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	El cuerpo de la trama contiene la información sobre la sesión SIP. Está en el protocolo SDP(Session description protocol).
 * ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No tiene éxito, ya que se envía un segundo INVITE. 

 * ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
	La diferencia es que en el segundo INVITE aparece una nueva cabecera (Proxy-Authorization). Esto se debe a que al enviar el primer INVITE el servidor le respondió con un mensaje 407 Proxy-Authorization Required.  

11. Una vez conectado, estudia el intercambio de tramas.

 * ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
	Los protocolos que se utilizan son RTP(Transmisión de tráfico multimedia en tiempo real), H.261(Comprensor de vídeo), RTCP(Proporciona información sobre la calidad de la información).

 * ¿Cuál es el tamaño de paquete de los mismos?
	Los paquetes de RTP tienen un tamaño fijo, 214 bytes. Los paquetes de H.261 y RTCP tienen un tamaño variable, es decir, varia el tamaño dependiendo del paquete.

 * ¿Se utilizan bits de padding?
	No. EL bit de padding es 0 en todos los paquetes.

 * ¿Cuál es la periodicidad de los paquetes (en origen; nota que la captura es en destino)?
	Los paquetes se envían cada 20ms.

 * ¿Cuántos bits/segundo se envı́an?
	Se envían 64Kbits/seg

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 * ¿Cuántos flujos hay? ¿por qué?
	Hay un flujo para H.261 y otro para g.711. Se envían por separado.

 * ¿Cuántos paquetes se pierden?
	No se pierde ningún paquete en ninguno de los dos flujos. 

 * ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
	El valor máximo de la delta para los paquetes de audio es de 1290.48 y para los paquetes de video de 1290.44 ms. El valor de la delta muestra el retardo o latencia (tiempo que tarda un paquete de ir del origen al destino).

 * ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Crees que estamos ante una conversación de calidad?
	Los valores medio de jitter son 153.24 y 42.50 respectivamente. Y máximos 183.10 para el primer flujo y 119.64 para el segundo.
El jitter es el parámetro que determina la variación temporal que experimemta el retardo en una transmisión de paquetes entre el inicio y el fin de la comunicación. Por tanto, si tenemos un jitter alto no tenemos una conversación de calidad. 

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.

 * ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
	La delta y el jitter en los dos casos vale 0. 

 * ¿Podemos saber si éste es el primer paquete que nos han enviado?
	Si la delta es 0 es el primer paquete que se ha enviado. Además el parámetro Marker indica cual es el primer paquete que ha sido enviado.

 * Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
	Hasta el paquete 247, que es cuando cambia. 

 * ¿A qué se debe el cambio tan brusco del jitter?
	Aumenta el valor de la delta y por tanto también el del jitter. Es decir, este cambio se debe a que disminuye el ancho de banda y aumenta la congestión, por lo que va haber más retardo en los paquetes. 

 * ¿Es comparable el cambio en el valor de jitter con el del delta? ¿Cual es más grande?
	El cambio del valor del jitter depende del cambio de la delta. Es más grande el del jitter.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 * ¿Cuánto dura la conversación?
	La conversación dura 20,8 segundos.

 * ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
	Paquete G.711 --> 0xbf4afd37
	Paquete H.261 --> 0x43306582
Hay un SRC para cada flujo. No hay ningún CSRCs.

15. Identifica la trama donde se finaliza la conversación.
 * ¿Qué método SIP se utiliza?
	Se utiliza el método BYE.

 * ¿En qué trama(s)?
	En los paquetes 924, 925, 927 y 933.

 * ¿Por qué crees que se envı́a varias veces?
	Se reenvía los paquetes hasta que recibe un mensaje 200 OK.

16. Finalmente, se cierra la aplicación de VozIP.

 * ¿Por qué aparece una instrucción SIP del tipo REGISTER?
	Porque cuando cerramos sesión se envía un register con Expires = 0.

 * ¿En qué trama sucede esto?
	En la 950.

 * ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
	Pues que el primer register tiene una expiración de 3600 segundos y ahora es de 0 segundos.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
 * ¿Se utilizan DNS y STUN? ¿Por qué?
	Sí se utilizan las dos. DNS para la asignación de nombres del dominio a direcciones IP y STUN que permite a clientes NAT encontrar su dirección IP pública. 
 * ¿Son diferentes el registro y la descripción de la sesión?
	Sí.

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 * ¿Cuántos flujos tenemos?
	Tenemos dos flujos, uno de audio y otro de vídeo.

 * ¿Cuál es su periodicidad?
	320ms

 * ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
	El valor máximo de la delta es 23.129ms y 37.245ms. Los valores máximos del jitter son 1.187 y 13.049. Y por último los valores medios del jitter son 0.602 y 12.511.

 * ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo? 
	Sí, en la pestaña de Telephony --> VoIP Calls --> Play Streams --> Play.
Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.

 * ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
	El tipo de servicio que ofrece es eco.

 [Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]








NOTA: SRC --> IDENTIFICADORES DE FUENTES
MAX DELTA --> ES LA DIFERENCIA ENTRE UN PAQUETE QUE HE ENVIADO Y EL SIGUIENTE --> MAX DIFERENCIA ENTRE PAQUETES 
JITTER --> DIFERENCIA DE CUANDO ME DEBERÍA HABER LLEGADO EL PAQUETE Y CUANDO ME HA LLEGADO DE VERDAD (BUFFER)

